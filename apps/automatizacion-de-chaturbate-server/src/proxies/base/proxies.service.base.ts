/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Proxies as PrismaProxies } from "@prisma/client";

export class ProxiesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ProxiesCountArgs, "select">): Promise<number> {
    return this.prisma.proxies.count(args);
  }

  async proxiesItems(
    args: Prisma.ProxiesFindManyArgs
  ): Promise<PrismaProxies[]> {
    return this.prisma.proxies.findMany(args);
  }
  async proxies(
    args: Prisma.ProxiesFindUniqueArgs
  ): Promise<PrismaProxies | null> {
    return this.prisma.proxies.findUnique(args);
  }
  async createProxies(args: Prisma.ProxiesCreateArgs): Promise<PrismaProxies> {
    return this.prisma.proxies.create(args);
  }
  async updateProxies(args: Prisma.ProxiesUpdateArgs): Promise<PrismaProxies> {
    return this.prisma.proxies.update(args);
  }
  async deleteProxies(args: Prisma.ProxiesDeleteArgs): Promise<PrismaProxies> {
    return this.prisma.proxies.delete(args);
  }
}
